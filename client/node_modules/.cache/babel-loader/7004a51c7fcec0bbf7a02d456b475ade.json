{"ast":null,"code":"import _defineProperty from \"/home/raja/Documents/PM2/mern_blog/bloggy-master/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/raja/Documents/PM2/mern_blog/bloggy-master/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/raja/Documents/PM2/mern_blog/bloggy-master/client/src/containers/posts/CreatePostPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../actions/postActions\";\n\nconst CreatePostPage = ({\n  errors,\n  createPost,\n  loading,\n  history\n}) => {\n  const _useState = useState({\n    title: \"\",\n    body: \"\",\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  useEffect(() => {\n    setPost(post => {\n      return _objectSpread({}, post, {\n        errors\n      });\n    });\n  }, [errors]);\n\n  const handleChange = e => {\n    setPost(_objectSpread({}, post, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleBlur = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    const error = _objectSpread({}, post.errors, {}, Validate(name, value).errors);\n\n    setPost(_objectSpread({}, post, {\n      errors: _objectSpread({}, error)\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const title = post.title,\n          body = post.body;\n    createPost({\n      title,\n      body\n    }, history);\n  };\n\n  return React.createElement(PostForm, {\n    loading: loading,\n    post: post,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  loading: state.post.postLoading,\n  errors: state.errors\n});\n\nCreatePostPage.propTypes = {\n  createPost: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, {\n  createPost\n})(CreatePostPage);","map":{"version":3,"sources":["/home/raja/Documents/PM2/mern_blog/bloggy-master/client/src/containers/posts/CreatePostPage.js"],"names":["React","useState","useEffect","PropTypes","PostForm","Validate","connect","createPost","CreatePostPage","errors","loading","history","title","body","post","setPost","handleChange","e","target","name","value","handleBlur","error","handleSubmit","preventDefault","mapStateToProps","state","postLoading","propTypes","func","isRequired","object","bool"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUF,EAAAA,UAAV;AAAsBG,EAAAA,OAAtB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAAA,oBAC1CV,QAAQ,CAAC;AAC9BW,IAAAA,KAAK,EAAE,EADuB;AAE9BC,IAAAA,IAAI,EAAE,EAFwB;AAG9BJ,IAAAA,MAAM,EAAE;AAHsB,GAAD,CADkC;AAAA;AAAA,QAC3DK,IAD2D;AAAA,QACrDC,OADqD;;AAOlEb,EAAAA,SAAS,CAAC,MAAM;AACba,IAAAA,OAAO,CAACD,IAAI,IAAI;AACb,+BAAYA,IAAZ;AAAkBL,QAAAA;AAAlB;AACF,KAFM,CAAP;AAGF,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAGC,CAAC,IAAI;AACvBF,IAAAA,OAAO,mBACDD,IADC;AAEJ,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFtB,OAAP;AAIF,GALD;;AAOA,QAAMC,UAAU,GAAGJ,CAAC,IAAI;AAAA,sBACGA,CAAC,CAACC,MADL;AAAA,UACbC,IADa,aACbA,IADa;AAAA,UACPC,KADO,aACPA,KADO;;AAErB,UAAME,KAAK,qBAAQR,IAAI,CAACL,MAAb,MAAwBJ,QAAQ,CAACc,IAAD,EAAOC,KAAP,CAAR,CAAsBX,MAA9C,CAAX;;AACAM,IAAAA,OAAO,mBAAMD,IAAN;AAAYL,MAAAA,MAAM,oBAAOa,KAAP;AAAlB,OAAP;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAGN,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACO,cAAF;AADuB,UAEfZ,KAFe,GAECE,IAFD,CAEfF,KAFe;AAAA,UAERC,IAFQ,GAECC,IAFD,CAERD,IAFQ;AAGvBN,IAAAA,UAAU,CAAC;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,EAAkBF,OAAlB,CAAV;AACF,GAJD;;AAMA,SACG,oBAAC,QAAD;AACG,IAAA,OAAO,EAAED,OADZ;AAEG,IAAA,IAAI,EAAEI,IAFT;AAGG,IAAA,QAAQ,EAAEE,YAHb;AAIG,IAAA,MAAM,EAAEK,UAJX;AAKG,IAAA,QAAQ,EAAEE,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AASF,CAzCD;;AA2CA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/BhB,EAAAA,OAAO,EAAEgB,KAAK,CAACZ,IAAN,CAAWa,WADW;AAE/BlB,EAAAA,MAAM,EAAEiB,KAAK,CAACjB;AAFiB,CAAL,CAA7B;;AAKAD,cAAc,CAACoB,SAAf,GAA2B;AACxBrB,EAAAA,UAAU,EAAEJ,SAAS,CAAC0B,IAAV,CAAeC,UADH;AAExBrB,EAAAA,MAAM,EAAEN,SAAS,CAAC4B,MAAV,CAAiBD,UAFD;AAGxBpB,EAAAA,OAAO,EAAEP,SAAS,CAAC6B,IAAV,CAAeF;AAHA,CAA3B;AAMA,eAAexB,OAAO,CACnBmB,eADmB,EAEnB;AAAElB,EAAAA;AAAF,CAFmB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../actions/postActions\";\n\nconst CreatePostPage = ({ errors, createPost, loading, history }) => {\n   const [post, setPost] = useState({\n      title: \"\",\n      body: \"\",\n      errors: {}\n   });\n\n   useEffect(() => {\n      setPost(post => {\n         return { ...post, errors };\n      });\n   }, [errors]);\n\n   const handleChange = e => {\n      setPost({\n         ...post,\n         [e.target.name]: e.target.value\n      });\n   };\n\n   const handleBlur = e => {\n      const { name, value } = e.target;\n      const error = { ...post.errors, ...Validate(name, value).errors };\n      setPost({ ...post, errors: { ...error } });\n   };\n\n   const handleSubmit = e => {\n      e.preventDefault();\n      const { title, body } = post;\n      createPost({ title, body }, history);\n   };\n\n   return (\n      <PostForm\n         loading={loading}\n         post={post}\n         onChange={handleChange}\n         onBlur={handleBlur}\n         onSubmit={handleSubmit}\n      />\n   );\n};\n\nconst mapStateToProps = state => ({\n   loading: state.post.postLoading,\n   errors: state.errors\n});\n\nCreatePostPage.propTypes = {\n   createPost: PropTypes.func.isRequired,\n   errors: PropTypes.object.isRequired,\n   loading: PropTypes.bool.isRequired\n};\n\nexport default connect(\n   mapStateToProps,\n   { createPost }\n)(CreatePostPage);\n"]},"metadata":{},"sourceType":"module"}
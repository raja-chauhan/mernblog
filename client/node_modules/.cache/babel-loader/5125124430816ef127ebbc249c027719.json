{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER, TOGGLE_USER_LOADING } from \"./types\";\nimport { resetPost } from \"./postActions\";\nimport { setErrors } from \"./errorActions\";\nexport const registerUser = (userData, history) => dispatch => {\n  dispatch(toggleUserLoading());\n  axios.post(\"/api/users/signup\", userData).then(res => {\n    dispatch(toggleUserLoading());\n    localStorage.setItem(\"loginMessage\", \"Successfully registered. Login to continue\");\n    history.push(\"/login\");\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(toggleUserLoading());\n  });\n};\nexport const loginUser = userData => dispatch => {\n  dispatch(toggleUserLoading());\n  axios.post(\"/api/users/login\", userData).then(res => {\n    dispatch(resetPost());\n    const token = res.data.token;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    dispatch(toggleUserLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(toggleUserLoading());\n  });\n};\nexport const setCurrentUser = userData => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: userData\n  };\n};\nexport const toggleUserLoading = () => {\n  return {\n    type: TOGGLE_USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/raja/Documents/PM2/mern_blog/bloggy-master/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","SET_CURRENT_USER","TOGGLE_USER_LOADING","resetPost","setErrors","registerUser","userData","history","dispatch","toggleUserLoading","post","then","res","localStorage","setItem","push","catch","err","response","data","loginUser","token","decoded","setCurrentUser","type","payload","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,SAAtD;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC5DA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAX,EAAAA,KAAK,CACDY,IADJ,CACS,mBADT,EAC8BJ,QAD9B,EAEIK,IAFJ,CAESC,GAAG,IAAI;AACVJ,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAI,IAAAA,YAAY,CAACC,OAAb,CACG,cADH,EAEG,4CAFH;AAIAP,IAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACF,GATJ,EAUIC,KAVJ,CAUUC,GAAG,IAAI;AACXT,IAAAA,QAAQ,CAACJ,SAAS,CAACa,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAV,CAAR;AACAX,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACF,GAbJ;AAcF,CAhBM;AAkBP,OAAO,MAAMW,SAAS,GAAGd,QAAQ,IAAIE,QAAQ,IAAI;AAC9CA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAX,EAAAA,KAAK,CACDY,IADJ,CACS,kBADT,EAC6BJ,QAD7B,EAEIK,IAFJ,CAESC,GAAG,IAAI;AACVJ,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AADU,UAEFkB,KAFE,GAEQT,GAAG,CAACO,IAFZ,CAEFE,KAFE;AAGVR,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCO,KAAjC;AACAtB,IAAAA,YAAY,CAACsB,KAAD,CAAZ;AACA,UAAMC,OAAO,GAAGtB,UAAU,CAACqB,KAAD,CAA1B;AACAb,IAAAA,QAAQ,CAACe,cAAc,CAACD,OAAD,CAAf,CAAR;AACAd,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACF,GAVJ,EAWIO,KAXJ,CAWUC,GAAG,IAAI;AACXT,IAAAA,QAAQ,CAACJ,SAAS,CAACa,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAV,CAAR;AACAX,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACF,GAdJ;AAeF,CAjBM;AAmBP,OAAO,MAAMc,cAAc,GAAGjB,QAAQ,IAAI;AACvC,SAAO;AACJkB,IAAAA,IAAI,EAAEvB,gBADF;AAEJwB,IAAAA,OAAO,EAAEnB;AAFL,GAAP;AAIF,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAG,MAAM;AACpC,SAAO;AACJe,IAAAA,IAAI,EAAEtB;AADF,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMwB,UAAU,GAAG,MAAMlB,QAAQ,IAAI;AACzCK,EAAAA,YAAY,CAACc,UAAb,CAAwB,UAAxB;AACA5B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,EAAAA,QAAQ,CAACe,cAAc,CAAC,EAAD,CAAf,CAAR;AACF,CAJM","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { SET_CURRENT_USER, TOGGLE_USER_LOADING } from \"./types\";\nimport { resetPost } from \"./postActions\";\nimport { setErrors } from \"./errorActions\";\n\nexport const registerUser = (userData, history) => dispatch => {\n   dispatch(toggleUserLoading());\n   axios\n      .post(\"/api/users/signup\", userData)\n      .then(res => {\n         dispatch(toggleUserLoading());\n         localStorage.setItem(\n            \"loginMessage\",\n            \"Successfully registered. Login to continue\"\n         );\n         history.push(\"/login\");\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(toggleUserLoading());\n      });\n};\n\nexport const loginUser = userData => dispatch => {\n   dispatch(toggleUserLoading());\n   axios\n      .post(\"/api/users/login\", userData)\n      .then(res => {\n         dispatch(resetPost());\n         const { token } = res.data;\n         localStorage.setItem(\"jwtToken\", token);\n         setAuthToken(token);\n         const decoded = jwt_decode(token);\n         dispatch(setCurrentUser(decoded));\n         dispatch(toggleUserLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(toggleUserLoading());\n      });\n};\n\nexport const setCurrentUser = userData => {\n   return {\n      type: SET_CURRENT_USER,\n      payload: userData\n   };\n};\n\nexport const toggleUserLoading = () => {\n   return {\n      type: TOGGLE_USER_LOADING\n   };\n};\n\nexport const logoutUser = () => dispatch => {\n   localStorage.removeItem(\"jwtToken\");\n   setAuthToken(false);\n   dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}